spring.config.import=optional:file:.env[.properties]
spring.jpa.database=POSTGRESQL

#Devs
spring.devtools.restart.enabled=true

#Redis configuration
spring.redis.host=localhost
spring.redis.port=6379

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection

# Conexion
spring.datasource.url=${DB_URL}${DB_USERS}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# Nombre de la aplicacion
spring.application.name=users-microservice

# PUERTO
server.port=8081

# Configuracion Eureka
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
spring.cloud.gateway.discovery.locator.enabled=true

# ===============================
# = KAFKA
# ===============================
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.topic.name=user_topics

# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
logging.level.web=debug

# Table names physically
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#Jwt config
jwt.secret=publicKey.pem
jwt.token.validity = 10


spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowed-headers=Content-Type
spring.cloud.gateway.globalcors.cors-configurations['[/**]'].allowed-methods=GET,POST,PUT,DELETE